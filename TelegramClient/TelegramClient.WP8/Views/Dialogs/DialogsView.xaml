<views:TelegramViewBase
    x:Class="TelegramClient.Views.Dialogs.DialogsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:controls="clr-namespace:Telegram.Controls;assembly=Telegram.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:triggers="clr-namespace:Telegram.Controls.Triggers;assembly=Telegram.Controls"
    xmlns:telegramControls="clr-namespace:TelegramClient.Views.Controls"
    xmlns:navigation="clr-namespace:TelegramClient.Animation.Navigation"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    Visibility="{Binding Visibility}"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="True">

    <views:TelegramViewBase.Resources>
        <DataTemplate x:Key="DialogTemplate">
            <Grid x:Name="MainItemGrid" Margin="0,0,18,-12" Background="Transparent" Tap="MainItemGrid_OnTap">
                <Grid.RenderTransform>
                    <CompositeTransform/>
                </Grid.RenderTransform>
                <!--<Grid.Projection>
                        <PlaneProjection CenterOfRotationY="0" CenterOfRotationX="0" RotationY="-80"/>
                    </Grid.Projection>-->
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MainItemGrid">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>-->

                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}" Loaded="ContextMenu_OnLoaded">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [ClearHistory($DataContext)]" Loaded="ClearHistory_OnLoaded" Header="{Binding Resources.ClearHistory, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [DeleteDialog($DataContext)]" Loaded="DeleteDialog_OnLoaded" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [DeleteAndStop($DataContext)]" Loaded="DeleteAndStop_OnLoaded" Header="{Binding Resources.DeleteAndStop, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [DeleteAndExit($DataContext)]" Loaded="DeleteAndExit_OnLoaded" Header="{Binding Resources.DeleteAndExit, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [PinToStart($DataContext)]" Loaded="PinToStart_OnLoaded"  Header="{Binding Resources.PinToStart, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <views:ConversationTileControl Margin="12,12,0,7" Grid.RowSpan="2" VerticalAlignment="Top"/>

                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Background="{StaticResource PhoneAccentBrush}" Width="18" Height="18"
                        Grid.Column="0" 
                        Visibility="{Binding EncryptedChatVisibility}"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Margin="16,0,-11,8">
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="/Images/Dialogs/secretchat-WXGA.png" Stretch="Uniform"/>
                        </Border.OpacityMask>
                    </Border>
                    <!--<Border Background="{StaticResource PhoneAccentBrush}" Width="18" Height="18"
                        Grid.Column="0" 
                        Visibility="{Binding ChatIconVisibility}"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Margin="16,0,-11,8">
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="/Images/Dialogs/group-WXGA.png" Stretch="Uniform"/>
                        </Border.OpacityMask>
                    </Border>-->

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            navigation:AnimatedBasePage.IsAnimationTarget="True"
                            Margin="14,-2,0,-1" FontSize="36.667" MaxHeight="48.77"
                            Text="{Binding With, Converter={StaticResource DialogCaptionConverter}}" 
                            Foreground="{StaticResource PhoneForegroundBrush}"
                            Style="{StaticResource PhoneTextExtraLargeStyle}"/>

                        <Border Background="{StaticResource PhoneAccentBrush}" Width="19" Height="19"
                            Grid.Column="1" 
                            Visibility="{Binding VerifiedChannelVisibility}"
                            HorizontalAlignment="Right" VerticalAlignment="Bottom"
                            Margin="8,0,0,8">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="/Images/Dialogs/channel.check-WXGA.png" Stretch="Uniform"/>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>

                    <StackPanel Grid.Column="2" Margin="6,0,0,4" Orientation="Horizontal" VerticalAlignment="Bottom">
                        <TextBlock Margin="0,0,0,0" FontFamily="{StaticResource PhoneFontFamilySemiBold}" LineStackingStrategy="BlockLineHeight" LineHeight="22" Text="{Binding TopMessage.Date, Converter={StaticResource DialogDateTimeConverter}}" Style="{StaticResource PhoneTextSubtleStyle}"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Grid.Column="1" Margin="13,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <Grid Grid.Column="0" VerticalAlignment="Top" Margin="2,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Height="22"
                            Margin="0,0,12,0"
                            LineStackingStrategy="BlockLineHeight" LineHeight="22"
                            Text="{Binding Self, Converter={StaticResource DialogMessageFromConverter}}"
                            FontFamily="{StaticResource PhoneFontFamilySemiBold}"
                            Visibility="{Binding TopMessage.ShowFrom, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Style="{StaticResource PhoneTextSubtleStyle}"/>
                        <TextBlock Grid.Row="1" MinHeight="22" MaxHeight="{Binding TopMessage.ShowFrom, Converter={StaticResource ChatToMaxHeight}}"
                            Margin="0,0,0,22"
                            LineStackingStrategy="BlockLineHeight" LineHeight="22"
                            Text="{Binding Self, Converter={StaticResource DialogToBriefInfo}}" TextWrapping="Wrap" 
                            Foreground="{Binding Self, Converter={StaticResource MessageForeground}, FallbackValue={StaticResource PhoneSubtleBrush}}"
                            TextTrimming="WordEllipsis"
                            Style="{StaticResource PhoneTextSubtleStyle}"/>
                        
                        <Border Grid.RowSpan="2" Background="{StaticResource PhoneBackgroundBrush}" Visibility="{Binding Self.TypingString, Converter={StaticResource EmptyStringToVisibilityConverter}, ConverterParameter=invert}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <TextBlock MinHeight="22"
                                VerticalAlignment="Top"
                                Margin="0,0,0,22"
                                LineStackingStrategy="BlockLineHeight" LineHeight="22"
                                Text="{Binding Self.TypingString}" TextWrapping="NoWrap" 
                                Foreground="{StaticResource PhoneAccentBrush}"
                                TextTrimming="WordEllipsis"
                                Style="{StaticResource PhoneTextSubtleStyle}"/>
                        </Border>
                    </Grid>
                    
                    <StackPanel Grid.Column="1" Margin="12,0,0,16" Orientation="Horizontal" VerticalAlignment="Bottom">
                        <Border Background="{Binding MuteIconBackground}" Width="16" Height="16"
                            Visibility="{Binding NotifySettings, Converter={StaticResource NotifySettingsToVisibilityConverter}, FallbackValue=Collapsed}"
                            HorizontalAlignment="Right" VerticalAlignment="Bottom"
                            Margin="8,0,0,9">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="/Images/Dialogs/chat.mute-WXGA.png" Stretch="Uniform"/>
                            </Border.OpacityMask>
                        </Border>
                        
                        <telegramControls:MessageStatusControl Visibility="{Binding TopMessage.Out.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" VerticalAlignment="Top" Height="18" Margin="6,1,6,10"/>
                        <Border Background="Transparent" VerticalAlignment="Bottom" Margin="8,-2,0,5"
                                Visibility="{Binding UnreadCount, Converter={StaticResource UnreadCountToVisibilityConverter}}">
                            <TextBlock Margin="0,1" Text="{Binding UnreadCount}" Foreground="{StaticResource PhoneAccentBrush}" LineStackingStrategy="BlockLineHeight" LineHeight="22" Style="{StaticResource PhoneTextSubtleStyle}"/>
                        </Border>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
    </views:TelegramViewBase.Resources>

    <Grid x:Name="LayoutRoot" Background="Transparent" Margin="0,-25,-14,0">
        <controls:LazyListBox 
            x:Name="Items"
            ItemTemplate="{StaticResource DialogTemplate}"
            IsScrolling="{Binding IsScrolling, Mode=TwoWay}"
            CloseToEndPercent="0.1"
            CloseToEnd="Items_OnCloseToEnd"
            Style="{StaticResource LazyListBoxStyle}">
            <controls:LazyListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </controls:LazyListBox.ItemsPanel>
            <i:Interaction.Triggers>
                <triggers:CompressionTrigger CompressionType="Bottom">
                    <micro:ActionMessage MethodName="LoadNextSlice"/>
                </triggers:CompressionTrigger>
            </i:Interaction.Triggers>
        </controls:LazyListBox>
        <TextBlock Text="{Binding Status}" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource PhoneTextGroupHeaderStyle}"/>
    </Grid>
</views:TelegramViewBase>