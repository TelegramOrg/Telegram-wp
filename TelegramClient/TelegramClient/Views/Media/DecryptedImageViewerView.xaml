<views:TelegramViewBase
    x:Class="TelegramClient.Views.Media.DecryptedImageViewerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:views="clr-namespace:TelegramClient.Views"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    x:Name="Self"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="False" d:DesignHeight="800" d:DesignWidth="480">

    <views:TelegramViewBase.Resources>
        <ResourceDictionary>
            <Storyboard x:Name="SlideRightAnimation" Completed="SlideRightAnimation_OnCompleted">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ImagesGrid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="500">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="SlideLeftAnimation" Completed="SlideLeftAnimation_OnCompleted">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ImagesGrid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-500">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="FadeInFromRightAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ImagesGrid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="500"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.15" Storyboard.TargetName="ImagesGrid">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>-->
            </Storyboard>

            <Storyboard x:Name="FadeInFromLeftAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ImagesGrid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-500"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>

                </DoubleAnimationUsingKeyFrames>
                <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0" To="1" Duration="0:0:0.15" Storyboard.TargetName="ImagesGrid">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>-->
            </Storyboard>

            <Storyboard x:Name="OpenApplicationPanelAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="72"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ApplicationPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="CloseApplicationPanelAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="72">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ApplicationPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.20" Value="Collapsed"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </views:TelegramViewBase.Resources>
    
    <Grid>
        <Grid x:Name="BackgroundBorder" Background="Black" Margin="0,0,0,-1" CacheMode="BitmapCache"/>
        <toolkit:PerformanceProgressBar IsIndeterminate="True" VerticalAlignment="Center"/>
        <Grid x:Name="ImagesGrid" Background="Transparent">
            <i:Interaction.Behaviors>
                <behaviors:PanAndZoomBehavior 
                    x:Name="PanAndZoom" 
                    MaxZoom="5" CanZoom="{Binding CanZoom}"
                    Flick="GestureListener_OnFlick" 
                    Close="PanAndZoom_OnClose" 
                    Tap="PanAndZoom_OnTap"
                    DebugText="{Binding ElementName=DebugTextBlock2}" 
                    BackgroundPanel="{Binding ElementName=BackgroundBorder}"/>
            </i:Interaction.Behaviors>
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>

            <Grid CacheMode="BitmapCache" VerticalAlignment="Center">
                <Image x:Name="imgViewer" Source="{Binding CurrentItem.Media.Self, Converter={StaticResource PhotoToThumbConverter}}"/>
                <Image x:Name="imgViewer2" Source="{Binding CurrentItem.Media.Self, Converter={StaticResource DefaultPhotoConverter}}"/>

                <Border Visibility="{Binding CurrentItem.Media.Video, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}" MaxHeight="500"
                        Tap="VideoElement_OnTap">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" MinHeight="250" Background="Black">
                        <Image Source="{Binding CurrentItem.Media.Video, Converter={StaticResource DefaultPhotoConverter}}" />
                        <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image VerticalAlignment="Center"
					                Width="48" Height="48" Margin="-4,3,-4,0"
					                Source="/Images/Audio/appbar.transport.play.rest.png"/>
                            <TextBlock Grid.Column="1"
					                VerticalAlignment="Center" Margin="0"
					                Text="{Binding CurrentItem.Media.Video.DurationString}"
					                Foreground="White"
					                Style="{StaticResource PhoneTextLargeStyle}"/>
                        </Grid>
                        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="#44000000"
				                Visibility="{Binding CurrentItem.Media.DownloadingProgress, Converter={StaticResource ProgressToVisibilityConverter}}">
                            <i:Interaction.Behaviors>
                                <behaviors:MarkTapAsHandledBehavior/>
                            </i:Interaction.Behaviors>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ProgressBar Margin="-6,12,0,12" Background="#33FFFFFF" Foreground="White"  Value="{Binding CurrentItem.Media.DownloadingProgress}" Maximum="1.0"/>
                            <TextBlock Grid.Column="1" Margin="0,0,6,4" VerticalAlignment="Bottom" Foreground="#FFFFFFFF" micro:Message.Attach="[Event Tap] = [Action CancelVideoDownloading]" Text="{Binding Resources.Cancel, Source={StaticResource Strings}}" TextDecorations="Underline"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <Grid VerticalAlignment="Bottom" x:Name="ApplicationPanel" CacheMode="BitmapCache">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <Border Background="Black" Opacity="0.3" Height="72"/>
            <StackPanel Margin="10,0,0,0" VerticalAlignment="Center">
                <TextBlock x:Name="FullName" Text="{Binding CurrentItem.From.FullName}" Foreground="White" Height="26.6" Style="{StaticResource PhoneTextNormalStyle}">
                    <TextBlock.RenderTransform>
                        <CompositeTransform/>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <TextBlock x:Name="Date" Margin="12,-5,12,0" Text="{Binding CurrentItem.Date, Converter={StaticResource MessageDateTimeConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}">
                    <TextBlock.RenderTransform>
                        <CompositeTransform/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </StackPanel>
        </Grid>

        <StackPanel Visibility="Collapsed">
            <TextBlock Foreground="LawnGreen" x:Name="DebugTextBlock" />
            <TextBlock Foreground="LawnGreen" x:Name="DebugTextBlock2"/>
        </StackPanel>
    </Grid>
</views:TelegramViewBase>