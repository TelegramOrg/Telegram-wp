<navigation:AnimatedBasePage
    x:Class="TelegramClient.Views.Dialogs.DialogDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:templateSelectors="clr-namespace:TelegramClient.Helpers.TemplateSelectors"
    xmlns:controls="clr-namespace:Telegram.Controls;assembly=Telegram.Controls"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:triggers="clr-namespace:Telegram.Controls.Triggers;assembly=Telegram.Controls"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    xmlns:navigation="clr-namespace:TelegramClient.Animation.Navigation"
    xmlns:emojiPanel="clr-namespace:Telegram.EmojiPanel"
    xmlns:dialogs="clr-namespace:TelegramClient.Views.Dialogs"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    x:Name="Self"
    micro:View.ApplyConventions="True"
    mc:Ignorable="d"
    UseLayoutRounding="True"
    BackKeyPress="DialogDetailsView_OnBackKeyPress"
    shell:SystemTray.Opacity="0.0"
    shell:SystemTray.IsVisible="True" d:DesignHeight="768" d:DesignWidth="480">

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator x:Name="ProgressIndicator" IsIndeterminate="{Binding IsWorking}" IsVisible="True" Text="{Binding MTProtoService.Message}"/>
    </shell:SystemTray.ProgressIndicator>
    
    <phone:PhoneApplicationPage.Resources>
        <DataTemplate x:Key="UserMessageTemplate">
            <Grid x:Name="MainItemGrid2">
                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ForwardMessage($DataContext)]" Header="{Binding Resources.Forward, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding DataContext.IsBroadcast, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action CopyMessage($DataContext)]" Header="{Binding Resources.Copy, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding Converter={StaticResource TextMessageToVisibilityConverter}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>

                <Grid x:Name="MainItemGrid" >
                    <Grid.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Grid.Projection>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <CheckBox x:Name="SelectionBox" IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                            Checked="SelectionBox_OnChecked"
                            Unchecked="SelectionBox_OnChecked"
                            Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <StackPanel Grid.Column="2" Grid.Row="0" Margin="0,12,24,0" Background="{Binding Converter={StaticResource OverlayAccentBrush}}">
                        <Border Margin="0,0,0,-50" Background="{Binding Converter={StaticResource OverlayAccentBrush}}">
                            <StackPanel Margin="0,6,0,50">
                                <TextBlock Text="{Binding From.FullName}" 
                                               Visibility="{Binding Media, Converter={StaticResource MediaEmptyToVisibilityConverter}}" 
                                               MaxHeight="22" 
                                               Foreground="#99FFFFFF" 
                                               Style="{StaticResource PhoneTextSmallStyle}"/>
                                <Grid Background="Transparent" micro:Message.Attach="[Event Tap] = [Action OpenFwdContactDetails($DataContext)]" Visibility="{Binding FwdFromId, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}">
                                    <Grid Visibility="{Binding Message, Converter={StaticResource EmptyTLStringToVisibilityConverter}, ConverterParameter=invert}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.ColumnSpan="2" Text="{Binding Resources.ForwardedMessage, Source={StaticResource Strings}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Resources.From, Source={StaticResource Strings}, StringFormat='\{0\} '}" Margin="12,-3,0,0" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding FwdFrom.FullName}" Margin="0,-3,0,0" HorizontalAlignment="Left" TextTrimming="WordEllipsis" MaxWidth="260" MaxHeight="24.83" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                    </Grid>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <ContentControl
                            Background="Transparent" 
                            micro:Message.Attach="[Event Tap] = [Action OpenReply($DataContext)]" 
                            Width="{Binding ReplyWidth}"
                            Content="{Binding ReplyInfo.Reply}" 
                            Margin="12,8,12,6"
                            ContentTemplate="{Binding ReplyInfo, Converter={StaticResource ReplyTemplateSelector}}"
                            HorizontalContentAlignment="Stretch"
                            Visibility="{Binding ReplyVisibility}"
                            HorizontalAlignment="Stretch"/>
                        <emojiPanel:TelegramRichTextBox 
                                Canvas.ZIndex="2"
                                Margin="0,6,0,0"
                                Width="335"
                                Visibility="{Binding Media, Converter={StaticResource GeoLocationToVisibilityConverter}}"
                                Text="{Binding Message}"
                                HorizontalAlignment="Stretch"
                                Background="{Binding Converter={StaticResource OverlayAccentBrush}}"
                                Style="{StaticResource InfiniteMessageBodyTelegramRichTextStyle}"/>

                        <ContentControl 
                                Background="Transparent"
                                micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]"
                                Margin="12,6,12,0"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Content="{Binding Media}"
                                ContentTemplate="{Binding Media, Converter={StaticResource MediaTemplateSelector}}"/>
                        <Border Canvas.ZIndex="1" Background="{Binding Converter={StaticResource OverlayAccentBrush}}" HorizontalAlignment="Stretch" Margin="0,-1">
                            <Grid Margin="12,8,12,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<TextBlock Grid.Column="0" Margin="0,-7,0,-4" Text="{Binding Unread, Converter={StaticResource UnreadMessageConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"
                                               Visibility="{Binding Status, Converter={StaticResource StringEqualsToVisibilityConverter}, ConverterParameter=Confirmed}"/>-->
                                <TextBlock Grid.Column="0" Margin="0,-7,0,-4" Text="{Binding Status, Converter={StaticResource MessageStatusConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <TextBlock Grid.Column="1" micro:Message.Attach="[Event Tap] = [Action Resend($DataContext)]" Text="{Binding Resources.Retry, Source={StaticResource Strings}}" 
                                               TextDecorations="Underline" 
                                               Margin="4,-7,0,-4" Foreground="#FFFFFFFF" 
                                                 FontSize="{StaticResource PhoneFontSizeNormal}" 
                                                 FontFamily="{StaticResource PhoneFontFamilyNormal}" 
                                                 Visibility="{Binding Status, Converter={StaticResource StringEqualsToVisibilityConverter}, ConverterParameter=Failed}"/>
                                <TextBlock Grid.Column="3" Margin="0,-7,6,-4" Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <Image Grid.Column="4" Height="18" Stretch="UniformToFill" Source="{Binding Status, Converter={StaticResource StatusToImageConverter}}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <Path Grid.Row="1" Grid.Column="2" Margin="0,0,36,0" x:Name="RightBottomCorner" Fill="{Binding Converter={StaticResource OverlayAccentBrush}}"  HorizontalAlignment="Right" VerticalAlignment="Top" Data="F1 M0,0 L1,1 L1,0" Width="12" Height="12" Stretch="Fill"/>
                </Grid>
                <Border x:Name="SelectionBorder" 
                        Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" 
                        Hold="UIElement_OnHold" 
                        micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  
                        Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ServiceMessageTemplate">
            <Grid Margin="48,12" x:Name="MainItemGrid2">
                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>
                <Grid.Projection>
                    <PlaneProjection RotationZ="180"/>
                </Grid.Projection>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Center">
                    <Border Margin="-6" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                    <TextBlock Margin="6,0" TextAlignment="Center" TextWrapping="Wrap" FontSize="20" Text="{Binding Converter={StaticResource ServiceMessageToTextConverter}}" Style="{StaticResource PhoneTextNormalStyle}"/>
                </Grid>
                <Grid Grid.Row="1" 
                      Background="Transparent"
                      Width="100" Height="100" Margin="0,12,0,0"
                      micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]"
                      Visibility="{Binding Action.Photo, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Border Background="{StaticResource PhoneChromeBrush}"/>
                    <Image Source="{Binding Action.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=100}" Stretch="UniformToFill"/>
                </Grid>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="FriendMessageTemplate">
            <Grid x:Name="MainItemGrid2">                
                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ForwardMessage($DataContext)]" Header="{Binding Resources.Forward, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding DataContext.IsBroadcast, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>                       
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action CopyMessage($DataContext)]" Header="{Binding Resources.Copy, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding Converter={StaticResource TextMessageToVisibilityConverter}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>

                <Grid x:Name="MainItemGrid">
                    <Grid.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Grid.Projection>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="12" />
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Row="1" IsChecked="{Binding IsSelected, Mode=TwoWay}"
                            Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <Path x:Name="LeftUpCorner" Grid.Column="1" HorizontalAlignment="Left" Fill="{StaticResource PhoneAccentBrush}"  Margin="36,0,0,0" VerticalAlignment="Bottom" Data="F1 M0,0 L0,1 L1,1" Width="12" Height="12" Stretch="Fill"/>

                    <StackPanel Grid.Row="1" Grid.Column="1" Margin="24,0,0,12" Background="{StaticResource PhoneAccentBrush}">
                        <Border Margin="0,0,0,-50" Background="{StaticResource PhoneAccentBrush}">
                            <StackPanel Margin="0,6,0,50">
                                <TextBlock Text="{Binding From.FullName}" 
                                               Visibility="{Binding Media, Converter={StaticResource MediaEmptyToVisibilityConverter}}" 
                                               MaxHeight="22" 
                                               Foreground="#99FFFFFF" 
                                               Style="{StaticResource PhoneTextSmallStyle}"/>
                                <Grid Background="Transparent" micro:Message.Attach="[Event Tap] = [Action OpenFwdContactDetails($DataContext)]" Visibility="{Binding FwdFromId, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}">
                                    <Grid Visibility="{Binding Message, Converter={StaticResource EmptyTLStringToVisibilityConverter}, ConverterParameter=invert}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.ColumnSpan="2" Text="{Binding Resources.ForwardedMessage, Source={StaticResource Strings}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Resources.From, Source={StaticResource Strings}, StringFormat='\{0\} '}" Margin="12,-3,0,0" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding FwdFrom.FullName}" Margin="0,-3,0,0" HorizontalAlignment="Left" TextTrimming="WordEllipsis" MaxWidth="260" MaxHeight="24.83" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                    </Grid>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <ContentControl
                            Background="Transparent" 
                            micro:Message.Attach="[Event Tap] = [Action OpenReply($DataContext)]" 
                            Width="{Binding ReplyWidth}"
                            Content="{Binding ReplyInfo.Reply}" 
                            Margin="12,8,12,6"
                            ContentTemplate="{Binding ReplyInfo, Converter={StaticResource ReplyTemplateSelector}}"
                            HorizontalContentAlignment="Stretch"
                            Visibility="{Binding ReplyVisibility}"
                            HorizontalAlignment="Stretch"/>
                        <emojiPanel:TelegramRichTextBox 
                                Canvas.ZIndex="2"
                                Margin="0,6,0,0"
                                Visibility="{Binding Media, Converter={StaticResource GeoLocationToVisibilityConverter}}"
                                Width="335"
                                Text="{Binding Message}"
                                Style="{StaticResource InfiniteMessageBodyTelegramRichTextStyle}"/>
                        <ContentControl
                                Background="Transparent"
                                micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]"
                                Margin="12,6,12,0"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Content="{Binding Media}"
                                ContentTemplate="{Binding Media, Converter={StaticResource MediaTemplateSelector}}"/>
                        <Border Canvas.ZIndex="1" Margin="0,-1" Background="{StaticResource PhoneAccentBrush}">
                            <Grid Margin="12,8,12,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<TextBlock Grid.Column="0" Margin="0,-7,0,-4" Text="{Binding Unread, Converter={StaticResource UnreadMessageConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>-->
                                <TextBlock Grid.Column="1" Margin="0,-7,0,-4" Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Grid>
                <Border x:Name="SelectionBorder" Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" Hold="UIElement_OnHold" micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
            
            
        </DataTemplate>

        <DataTemplate x:Key="ChatFriendMessageTemplate">
            <Grid x:Name="MainItemGrid2">
                
                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ForwardMessage($DataContext)]" Header="{Binding Resources.Forward, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding DataContext.IsBroadcast, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action CopyMessage($DataContext)]" Header="{Binding Resources.Copy, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" 
                                          Visibility="{Binding Converter={StaticResource TextMessageToVisibilityConverter}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>

                <Grid x:Name="MainItemGrid">
                    <Grid.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Grid.Projection>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="12"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Row="1" IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                            Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>


                    <!--<Image Grid.Row="1" Grid.Column="1" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding Converter={StaticResource ThemeToCheckImageConverter}}" Width="48" Height="48"/>-->


                    <Grid x:Name="grid" Grid.Row="1" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="69" />
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>


                        <!--Photo-->
                        <Grid Background="Transparent" micro:Message.Attach="[Event Tap]=[Action ShowUserProfile($DataContext)]">
                            <Grid Margin="24,0,0,0" Width="45" Height="45" VerticalAlignment="Top">
                                <Border Background="{Binding From.Index, Converter={StaticResource PlaceholderBackgroundConverter}}"/>
                                <Image Source="/Images/Placeholder/placeholder.user.transparent-WXGA.png"/>
                                <Image Source="{Binding From.Photo, Converter={StaticResource DefaultPhotoConverter}}" Stretch="UniformToFill"/>
                            </Grid>
                        </Grid>



                        <!--Accent overlay-->
                        <Path Grid.Column="1" HorizontalAlignment="Right" Margin="0,19,0,0" VerticalAlignment="Top" Data="F1 M0,0 L1,1 L1,0" Width="12" Height="12" Stretch="Fill">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource PhoneAccentColor}"/>
                            </Path.Fill>
                        </Path>
                        <Border Grid.Column="2" Margin="0,0,0,12">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource PhoneAccentColor}"/>
                            </Border.Background>
                        </Border>

                        <!--Message content-->
                        <StackPanel Grid.Column="2" Margin="0,0,0,12" Background="{StaticResource PhoneAccentBrush}">
                            <Border Margin="0,0,0,-50" Background="{StaticResource PhoneAccentBrush}">
                                <StackPanel Margin="0,6,0,50">
                                    <TextBlock Text="{Binding From.FullName}" 
                                               Visibility="{Binding Media, Converter={StaticResource MediaEmptyToVisibilityConverter}}" 
                                               MaxHeight="22" 
                                               Foreground="#99FFFFFF" 
                                               Style="{StaticResource PhoneTextSmallStyle}"/>
                                    <Grid Background="Transparent" micro:Message.Attach="[Event Tap] = [Action OpenFwdContactDetails($DataContext)]" Visibility="{Binding FwdFromId, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}">
                                        <Grid Visibility="{Binding Message, Converter={StaticResource EmptyTLStringToVisibilityConverter}, ConverterParameter=invert}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.ColumnSpan="2" Text="{Binding Resources.ForwardedMessage, Source={StaticResource Strings}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Resources.From, Source={StaticResource Strings}, StringFormat='\{0\} '}" Margin="12,-3,0,0" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding FwdFrom.FullName}" Margin="0,-3,0,0" HorizontalAlignment="Left" TextTrimming="WordEllipsis" MaxWidth="260" MaxHeight="24.83" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSmallStyle}"/>
                                        </Grid>
                                    </Grid>
                                </StackPanel>
                            </Border>
                            <ContentControl
                                Background="Transparent" 
                                micro:Message.Attach="[Event Tap] = [Action OpenReply($DataContext)]" 
                                Width="{Binding ReplyWidth}"
                                Content="{Binding ReplyInfo.Reply}" 
                                Margin="12,8,12,6"
                                ContentTemplate="{Binding ReplyInfo, Converter={StaticResource ReplyTemplateSelector}}"
                                HorizontalContentAlignment="Stretch"
                                Visibility="{Binding ReplyVisibility}"
                                HorizontalAlignment="Stretch"/>
                            <emojiPanel:TelegramRichTextBox 
                                Canvas.ZIndex="2"
                                Margin="0,6,0,0"
                                Width="335"
                                Visibility="{Binding Media, Converter={StaticResource GeoLocationToVisibilityConverter}}"
                                Text="{Binding Message}"
                                Style="{StaticResource InfiniteMessageBodyTelegramRichTextStyle}"/>
                            <ContentControl
                                Background="Transparent"
                                micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]"
                                Margin="12,0,12,0"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Content="{Binding Media}"
                                ContentTemplate="{Binding Media, Converter={StaticResource MediaTemplateSelector}}"/>
                            <Border Canvas.ZIndex="1" Margin="0,-1" Background="{StaticResource PhoneAccentBrush}">
                                <Grid Margin="12,8,12,12">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--<TextBlock Grid.Column="0" Margin="0,-7,0,-4" Text="{Binding Unread, Converter={StaticResource UnreadMessageConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>-->
                                    <TextBlock Grid.Column="1" Margin="0,-7,0,-4" Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Border x:Name="SelectionBorder" Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" Hold="UIElement_OnHold" micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>
        
        <templateSelectors:MessageTemplateSelector 
            x:Key="MessageTemplateSelector"
            UserMessageTemplate="{StaticResource UserMessageTemplate}"
            ChatFriendMessageTemplate="{StaticResource ChatFriendMessageTemplate}"
            FriendMessageTemplate="{StaticResource FriendMessageTemplate}"
            ServiceMessageTemplate="{StaticResource ServiceMessageTemplate}"/>
    </phone:PhoneApplicationPage.Resources>
 
    <i:Interaction.Behaviors>
        <behaviors:ThemeToStateBehavior LightState="LightState" DarkState="DarkState"/>
    </i:Interaction.Behaviors>

    <Grid>
        <ContentControl 
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
            Content="{Binding StateService}" 
            ContentTemplate="{Binding StateService.CurrentBackground, Converter={StaticResource DialogDetailsBackgroundConverter}}"/>
        <Grid x:Name="LayoutRoot" Background="Transparent">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <!--<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ThemeStateGroup">
                    <VisualState x:Name="LightState">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DarkThemeImage">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DarkState">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LightThemeImage">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->  
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button x:Name="OpenPeerDetails"
                toolkit:TiltEffect.IsTiltEnabled="True" 
                Margin="0,25,0,12" Grid.Row="0" VerticalAlignment="Bottom" Style="{StaticResource DialogDetailsCaptionButtonStyle}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" x:Name="Title">
                        <StackPanel.RenderTransform>
                            <CompositeTransform/>
                        </StackPanel.RenderTransform>
                        <TextBlock HorizontalAlignment="Left" Text="{Binding With, Converter={StaticResource DialogCaptionConverter}}" MaxHeight="42.56" Foreground="{Binding StateService.CurrentForegroundBrush}" Style="{StaticResource PhoneTextTitle2Style}"/>
                        <Image Width="21" Height="21" VerticalAlignment="Bottom" Source="/Images/Dialogs/chat.mute-WXGA.png" Margin="0,0,0,7" Visibility="{Binding With.NotifySettings, Converter={StaticResource NotifySettingsToVisibilityConverter}, FallbackValue=Collapsed}"/>
                    </StackPanel>
                    <TextBlock x:Name="Subtitle" Text="{Binding Subtitle}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource PhoneTextSubtleStyle}">
                                <Setter Property="Margin" Value="12,-4,0,0"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Button>


            <Border x:Name="DialogPhoto" Margin="12,41,24,0" VerticalAlignment="Top" Grid.Row="0" Grid.Column="1" Width="54" Height="54" Background="{Binding With.Index, Converter={StaticResource PlaceholderBackgroundConverter}}">
                <Grid Background="Transparent" micro:Message.Attach="[Event Tap] = [Action OpenChatPhoto]">
                    <Image Source="{Binding With, Converter={StaticResource PlaceholderDefaultImageConverter}}"/>
                    <Image Source="{Binding With.Photo, Converter={StaticResource DefaultPhotoConverter}}"/>
                </Grid>
            </Border>

            <Grid x:Name="ContentPanel" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="72"/>
                </Grid.RowDefinitions>

                <Grid 
                    VerticalAlignment="Center" HorizontalAlignment="Center" 
                    Visibility="{Binding IsEmptyDialog, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Border Margin="-12" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                    <StackPanel Margin="0,40,0,0">
                        <Grid Width="81">
                            <Image Source="{Binding EmptyDialogImageSource}" Stretch="UniformToFill"/>
                        </Grid>
                        <TextBlock Text="{Binding With, Converter={StaticResource EmptyDialogMessageConverter}}" Margin="12,40,12,0" FontSize="{StaticResource PhoneFontSizeMedium}" Style="{StaticResource PhoneTextGroupHeaderStyle}"/>
                    </StackPanel>
                </Grid>

                <controls:MultiTemplateLazyListBox 
                    x:Name="Items" Margin="0,-18,0,0"
                    ItemsSource="{Binding Items}"
                    IsScrolling="{Binding IsScrolling, Mode=TwoWay}"
                    CloseToEnd="Items_OnCloseToEnd"
                    ManipulationStarted="Items_OnManipulationStarted"
                    TemplateSelector="{StaticResource MessageTemplateSelector}"
                    Style="{StaticResource LazyListBoxInverseStyle}">
                    <controls:MultiTemplateLazyListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </controls:MultiTemplateLazyListBox.ItemsPanel>
                    <controls:MultiTemplateLazyListBox.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </controls:MultiTemplateLazyListBox.Projection>
                    <i:Interaction.Triggers>
                        <triggers:CompressionTrigger CompressionType="Bottom">
                            <micro:ActionMessage MethodName="LoadNextSlice"/>
                        </triggers:CompressionTrigger>
                    </i:Interaction.Triggers>
                </controls:MultiTemplateLazyListBox>
                <Image x:Name="MessagesCache" Source="{Binding With.Bitmap}" Margin="0,-18,0,0">
                    <Image.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Image.Projection>
                </Image>

                <!-- Usernames -->
                <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="121,-38,24,-12" MaxHeight="124">
                    <Grid.Resources>

                        <DataTemplate x:Key="UsernameHintTemplate">
                            <ListBoxItem toolkit:TiltEffect.IsTiltEnabled="True" Tap="UsernameHint_OnTap">
                                <Grid Height="41">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="12,0,0,0" Width="30" Height="30" VerticalAlignment="Center">
                                        <Border Background="{Binding Index, Converter={StaticResource PlaceholderBackgroundConverter}}"/>
                                        <TextBlock Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Foreground="White" Text="{Binding Converter={StaticResource PlaceholderDefaultTextConverter}}"/>
                                        <Image Source="{Binding Photo, Converter={StaticResource DefaultPhotoConverter}}" Stretch="UniformToFill"/>
                                    </Grid>

                                    <TextBlock Grid.Column="1" Text="{Binding FullName}" Foreground="Black" Margin="12,0,12,0" FontFamily="{StaticResource PhoneFontFamilySemiBold}" VerticalAlignment="Center" Style="{StaticResource PhoneTextSmallStyle}"/>
                                    <TextBlock Grid.Column="2" Text="{Binding UserName, StringFormat='@\{0\}'}" Foreground="Black" Margin="0,0,0,0" VerticalAlignment="Center" Style="{StaticResource PhoneTextSmallStyle}"/>
                                </Grid>
                            </ListBoxItem>
                        </DataTemplate>
                    </Grid.Resources>
                    <Grid x:Name="UsernameHintsPanel" Visibility="Visible" CacheMode="BitmapCache">
                        <Border Background="White" Opacity="0.9" />
                        <ItemsControl ItemsSource="{Binding UsernameHints}" ItemTemplate="{StaticResource UsernameHintTemplate}" ManipulationStarted="UsernameHints_OnManipulationStarted">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Visibility="{Binding Reply, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}" Margin="121,12,24,-12" Background="{Binding Converter={StaticResource OverlayAccentBrush}}">
                            <ContentControl
                            x:Name="ReplyMessage" 
                            Content="{Binding Reply}" 
                            Height="66" Margin="12,0"
                            ContentTemplate="{Binding ReplyInfo, Converter={StaticResource ReplyTemplateSelector}}"
                            HorizontalContentAlignment="Stretch"
                            HorizontalAlignment="Stretch"/>

                            <Border Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" micro:Message.Attach="[Event Tap] = [Action DeleteReply]">
                                <Image Source="/Images/Messages/message.deletereply.png" Width="13" Margin="8" Opacity="0.6"/>
                            </Border>
                        </Grid>
                        <controls:WatermarkedTextBox 
                            x:Name="InputMessage"
                            Grid.Row="1"
                            Visibility="{Binding With, Converter={StaticResource ChatForbiddenToVisibilityConverter}, ConverterParameter=invert}"
                            Margin="109,0,12,12" 
                            HorizontalContentAlignment="Left" 
                            HorizontalAlignment="Stretch"
                            Watermark="{Binding Resources.YourMessage, Converter={StaticResource Lowercase}, Source={StaticResource Strings}}" 
                            WatermarkForeground="{Binding WatermarkForeground}"
                            Text="{Binding Text, Mode=TwoWay}"
                            MaxHeight="140" VerticalAlignment="Bottom" AcceptsReturn="True" 
                            KeyDown="InputMessage_OnKeyDown"
                            GotFocus="InputMessage_OnGotFocus"
                            LostFocus="InputMessage_OnLostFocus"
                            TextWrapping="Wrap" 
                            Style="{StaticResource MessageTextBoxStyle}"
                            InputScope="Text">
                            <i:Interaction.Behaviors>
                                <behaviors:UpdateTextBindingBehavior/>
                            </i:Interaction.Behaviors>
                        </controls:WatermarkedTextBox>
                    </Grid>
                </Grid>

                <Grid Margin="0,33,0,0" Grid.Row="3">
                    <ContentControl x:Name="EmojiPlaceholder" HorizontalContentAlignment="Stretch" Visibility="Collapsed"/>
                    <dialogs:CommandsControl/>
                </Grid>
            </Grid>

            <Border Height="72" Grid.ColumnSpan="5" Grid.RowSpan="5"
                Visibility="{Binding With, Converter={StaticResource ChatForbiddenToVisibilityConverter}}"
                HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="{StaticResource PhoneChromeBrush}">
                <Button x:Name="DeleteAndExitGroup" Content="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
            </Border>
            <ContentControl Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="ChooseAttachment" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />

        </Grid>

        <ContentControl Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="ImageEditor"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <!--For performance reason with Pan&Zoom set ImageViewerView on Top of main Grid-->
        <ContentControl Grid.RowSpan="2" Grid.ColumnSpan="2" x:Name="ImageViewer"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                        Visibility="{Binding ImageViewer.IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <!--<media:ImageViewerView x:Name="ImageViewer" Visibility="{Binding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding ImageViewer}" Grid.RowSpan="2" Grid.ColumnSpan="2"/>-->
    </Grid>

</navigation:AnimatedBasePage>