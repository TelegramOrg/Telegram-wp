<UserControl 
    x:Class="Vk.Messenger.Views.Controls.MainTitleControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
	xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:Controls="clr-namespace:Vk.Messenger.Views.Controls"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    mc:Ignorable="d"
    x:Name="Self"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    d:DesignHeight="90" d:DesignWidth="480">

    <!--<i:Interaction.Behaviors>
        <behaviors:ThemeToStateBehavior LightState="Light" DarkState="Dark"/>
    </i:Interaction.Behaviors>-->
    <Grid x:Name="LayoutRoot">
        <!--<i:Interaction.Behaviors>
            <ec:DataStateBehavior Binding="{Binding StateService.NewMessagesCount, Converter={StaticResource CountToVisibilityConverter}}" Value="Visible" TrueState="Visible" FalseState="Collapsed"/>
        </i:Interaction.Behaviors>-->
    	<!--<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="ThemeStateGroup">
    			<VisualState x:Name="Light">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LightPanel">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="Dark">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DarkPanel">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="MessagesVisibilityStateGroup">
    			<VisualStateGroup.Transitions>
    				<VisualTransition From="Collapsed" GeneratedDuration="0" To="Visible">
    					<Storyboard>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LightMessagesCount">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    							<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="Visible"/>
    						</ObjectAnimationUsingKeyFrames>
    						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DarkMessagesCount">
    							<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="Visible"/>
    						</ObjectAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="DarkMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="35">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="LightMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="35">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LightMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DarkMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition GeneratedDuration="0" To="Visible">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LightMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="LightMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="35"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DarkMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuarticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="DarkMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="35"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuarticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    				<VisualTransition From="Visible" GeneratedDuration="0" To="Collapsed">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="LightMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-35">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="DarkMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-35">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DarkMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LightMessagesCount">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<QuinticEase EasingMode="EaseOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualTransition>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="Visible"/>
    			<VisualState x:Name="Collapsed">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LightMessagesCount">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DarkMessagesCount">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>-->
        <!--<Image x:Name="image1" Stretch="None" Source="/Vk.Messenger;component/Images/Light/VK.png" HorizontalAlignment="Left"/>
        <Image x:Name="image" Stretch="None" Source="/Vk.Messenger;component/Images/Dark/VK.png" HorizontalAlignment="Left"/>-->
        <!--<Grid Visibility="{Binding OnlyLogo, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}" >
            <StackPanel x:Name="LightPanel" Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel x:Name="LightMessagesCount" 
                    Orientation="Horizontal" 
                    Background="Transparent"
                    cal:Message.Attach="[Event Tap] = [Action OpenConversations]" RenderTransformOrigin="0.5,0.5">
                	<StackPanel.RenderTransform>
                		<CompositeTransform/>
                	</StackPanel.RenderTransform>
                    <Image Stretch="None" Source="/Vk.Messenger;component/Images/Light/UnreadMessages.png" />
                    
                    <Grid Margin="-9,0,7,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Controls:FlipCounter 
                            VerticalAlignment="Bottom"
                            Counter="{Binding StateService.NewMessagesCount, FallbackValue=0}"/>
                    </Grid>
                </StackPanel>
                <StackPanel 
                    Orientation="Horizontal" 
                    Background="Transparent"
                    cal:Message.Attach="[Event Tap] = [Action OpenFriendsRequests]">
                    <Image Stretch="None" Source="/Vk.Messenger;component/Images/Light/Requests.png" />
                    <Grid Margin="-10,0,24,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Controls:FlipCounter 
                            VerticalAlignment="Bottom"
                            Visibility="{Binding StateService.FriendRequestsCount, Converter={StaticResource CountToVisibilityConverter}}"
                            Counter="{Binding StateService.FriendRequestsCount, FallbackValue=0}"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <StackPanel x:Name="DarkPanel" Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel x:Name="DarkMessagesCount" 
                    Orientation="Horizontal"
                    Background="Transparent"
                    cal:Message.Attach="[Event Tap] = [Action OpenConversations]" RenderTransformOrigin="0.5,0.5">
                	<StackPanel.RenderTransform>
                		<CompositeTransform/>
                	</StackPanel.RenderTransform>
                    <Image Stretch="None" Source="/Vk.Messenger;component/Images/Dark/UnreadMessages.png" />
                    <Grid Margin="-9,0,7,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Controls:FlipCounter 
                            VerticalAlignment="Bottom"
                            Counter="{Binding StateService.NewMessagesCount, FallbackValue=0}"/>
                    </Grid>
                </StackPanel>
                <StackPanel 
                    Orientation="Horizontal" 
                    Background="Transparent"
                    cal:Message.Attach="[Event Tap] = [Action OpenFriendsRequests]">
                    <Image Stretch="None" Source="/Vk.Messenger;component/Images/Dark/Requests.png" />
                    <Grid Margin="-10,0,24,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Controls:FlipCounter 
                            VerticalAlignment="Bottom"
                            Visibility="{Binding StateService.FriendRequestsCount, Converter={StaticResource CountToVisibilityConverter}}"
                            Counter="{Binding StateService.FriendRequestsCount, FallbackValue=0}"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </Grid>-->
    </Grid>
</UserControl>
