<navigation:AnimatedBasePage
    x:Class="TelegramClient.Views.Dialogs.CreateChannelStep2View"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    xmlns:navigation="clr-namespace:TelegramClient.Animation.Navigation"
    xmlns:longListSelector="clr-namespace:Telegram.Controls.LongListSelector;assembly=Telegram.Controls"
    xmlns:controls="clr-namespace:Telegram.Controls;assembly=Telegram.Controls"
    xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:additional="clr-namespace:TelegramClient.Views.Additional"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    toolkit:TiltEffect.IsTiltEnabled="True"
    SupportedOrientations="Portrait" Orientation="Portrait"
    x:Name="Self"
    mc:Ignorable="d"
    shell:SystemTray.Opacity="0.0"
    shell:SystemTray.IsVisible="True">

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator x:Name="ProgressIndicator" IsIndeterminate="{Binding IsWorking}" IsVisible="True" />
    </shell:SystemTray.ProgressIndicator>

    <Grid x:Name="LayoutRoot" Background="Transparent" CacheMode="BitmapCache">
        <i:Interaction.Behaviors>
            <ec:DataStateBehavior Binding="{Binding HasError}" Value="True" TrueState="NotAvailable" FalseState="Available"/>
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AvailabilityGroup">
                <VisualState x:Name="Available">
                    <Storyboard>
                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ErrorBorder">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>-->
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="-100">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NotAvailable">
                    <Storyboard>
                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ErrorBorder">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>-->
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="12,49,0,28">
            <TextBlock Text="{Binding Resources.NewChannel, Source={StaticResource Strings}, Converter={StaticResource Uppercase}}" Style="{StaticResource ApplicationTitleStyle}"/>
        </StackPanel>

        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Margin="0,0" Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Resources.ChannelType, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Margin="12,12,12,0" FontSize="29" Style="{StaticResource PhoneTextGroupHeaderStyle}"/>

                <RadioButton Grid.Row="1" GroupName="ChannelType" IsChecked="{Binding IsPublic, Mode=TwoWay}" Content="{Binding Resources.Public, Source={StaticResource Strings}}"/>
                <RadioButton Margin="0,0,12,0" Grid.Row="3" GroupName="ChannelType" Content="{Binding Resources.Private, Source={StaticResource Strings}}"/>
                <TextBlock Grid.Row="4" Text="{Binding ChannelTypeDescription}" TextWrapping="Wrap" Style="{StaticResource PhoneTextSubtleStyle}" Margin="12,-12,12,0"/>
            </Grid>

            <Grid Grid.Row="3" Margin="0,48,0,0" Visibility="{Binding IsPublic, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Bottom" Text="{Binding Resources.Link, Source={StaticResource Strings}, StringFormat='\{0\}: telegram.me/'}" FontSize="{StaticResource PhoneFontSizeMedium}" Style="{StaticResource PhoneTextSubtleStyle}"/>
                <TextBox Grid.Row="0" Grid.Column="1" Margin="-36,0,-12,-12" x:Name="UserName" Style="{StaticResource HiddenTextBoxStyle}" TextChanged="UserName_OnTextChanged">              
                    <!--<TextBox.InputScope>
                        <InputScope>
                            <InputScopeName NameValue="Text"/>
                        </InputScope>
                    </TextBox.InputScope>-->
                </TextBox>
                <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="12,2,12,28" BorderThickness="0.5" BorderBrush="{StaticResource PhoneSubtleBrush}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="12,0,12,0" x:Name="Error" Text="{Binding Error}" TextWrapping="Wrap" Foreground="#FFB2362E" Style="{StaticResource PhoneTextSubtleStyle}">
                    <TextBlock.RenderTransform>
                        <TranslateTransform Y="-16"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding Resources.PublicLinkDescription, Source={StaticResource Strings}}" TextWrapping="Wrap" Style="{StaticResource PhoneTextSubtleStyle}" Margin="12,-12,12,0"/>
            </Grid>
            
            <Grid Grid.Row="4" Margin="0,48,0,0" Background="Transparent" Visibility="{Binding IsPublic, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}">

                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Self}">
                        <toolkit:MenuItem Click="CopyInvite_OnClick" Header="{Binding Resources.Copy, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock VerticalAlignment="Bottom" Text="{Binding InviteLink}" TextWrapping="Wrap" FontSize="{StaticResource PhoneFontSizeMedium}" Style="{StaticResource PhoneTextSubtleStyle}"/>
                <Border Grid.Row="1" Grid.Column="0" Margin="12,2,12,28" BorderThickness="0.5" BorderBrush="{StaticResource PhoneSubtleBrush}"/>
                <TextBlock Grid.Row="2" Text="{Binding Resources.PrivateLinkDescription, Source={StaticResource Strings}}" TextWrapping="Wrap" Style="{StaticResource PhoneTextSubtleStyle}" Margin="12,-12,12,0"/>
            </Grid>

            <!--<Grid Grid.Row="5" Margin="0,48,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <toolkit:ToggleSwitch Margin="0,0,-29,-21" IsChecked="False" IsEnabled="False" Header="">
                    <i:Interaction.Behaviors>
                        <behaviors:ToggleSwitchLocalizedContentBehavior
                                OnContent="{Binding Resources.Comments, Source={StaticResource Strings}}"
                                OffContent="{Binding Resources.Comments, Source={StaticResource Strings}}"/>
                    </i:Interaction.Behaviors>
                </toolkit:ToggleSwitch>
                <TextBlock Grid.Row="1" Text="{Binding Resources.CommentsDescription, Source={StaticResource Strings}}" TextWrapping="Wrap" Style="{StaticResource PhoneTextSubtleStyle}" Margin="12,0,12,-5"/>
            </Grid>-->
        </Grid>
    </Grid>
</navigation:AnimatedBasePage>