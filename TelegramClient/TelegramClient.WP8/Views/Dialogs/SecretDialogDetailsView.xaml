<views:TelegramViewBase
    x:Class="TelegramClient.Views.Dialogs.SecretDialogDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:controls="clr-namespace:Telegram.Controls;assembly=Telegram.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    xmlns:client="clr-namespace:TelegramClient"
    xmlns:selector="clr-namespace:TelegramClient.Helpers.TemplateSelectors"
    xmlns:controls1="clr-namespace:TelegramClient.Views.Controls"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:emojiPanel="clr-namespace:Telegram.EmojiPanel"
    xmlns:controls2="clr-namespace:TelegramClient.Controls"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    x:Name="Self"
    BackKeyPress="SecretDialogDetailsView_OnBackKeyPress"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.Opacity="0.0"
    shell:SystemTray.IsVisible="True">

    <controls2:TelegramTransitionService.NavigationInTransition>
        <controls2:TelegramNavigationInTransition EndTransition="NavigationTransition_OnEndTransition">
            <controls2:TelegramNavigationInTransition.Backward>
                <controls2:TelegramTurnstileTransition Mode="BackwardIn" />
            </controls2:TelegramNavigationInTransition.Backward>
        </controls2:TelegramNavigationInTransition>
    </controls2:TelegramTransitionService.NavigationInTransition>
    <controls2:TelegramTransitionService.NavigationOutTransition>
        <controls2:TelegramNavigationOutTransition>
            <controls2:TelegramNavigationOutTransition.Forward>
                <controls2:TelegramTurnstileTransition Mode="ForwardOut"/>
            </controls2:TelegramNavigationOutTransition.Forward>
        </controls2:TelegramNavigationOutTransition>
    </controls2:TelegramTransitionService.NavigationOutTransition>

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator x:Name="ProgressIndicator" IsIndeterminate="{Binding IsWorking}" IsVisible="True" />
    </shell:SystemTray.ProgressIndicator>

    <views:TelegramViewBase.Resources>
        <Storyboard x:Name="CloseCacheStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                    <!--<EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="5" EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>-->
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MessagesCache" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                    <!--<EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="5" EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>-->
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MessagesCache" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="Collapsed"/>
            </ObjectAnimationUsingKeyFrames>
            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="IsHitTestVisible">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="True"/>
            </ObjectAnimationUsingKeyFrames>-->
        </Storyboard>
        
        
        <DataTemplate x:Key="SecretPhotoTemplate">
            <Grid Margin="-6,0" Width="324" Height="324">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--<TextBlock Margin="0,0,6,6" Text="20s" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}"/>-->
                <Grid Grid.Row="1" Width="324" Height="324" Background="#66000000">
                    <Image Source="{Binding Self, Converter={StaticResource DefaultPhotoConverter}, Mode=OneWay}" Stretch="UniformToFill"/>
                    <Image Source="{Binding Converter={StaticResource PhotoToThumbConverter}}" Stretch="UniformToFill"/>
                    <controls1:SecretPhotoPlaceholder 
                        Width="324" Height="324" 
                        TTLParams="{Binding TTLParams}" 
                        StartTimer="SecretPhotoPlaceholder_OnStartTimer" 
                        Elapsed="SecretPhotoPlaceholder_OnElapsed" 
                        MouseLeftButtonDown="UIElement_OnMouseLeftButtonDown"/>
                    <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="#44000000"
				        Visibility="{Binding UploadingProgress, Converter={StaticResource ProgressToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ProgressBar Margin="-6,12,0,12" Background="#33FFFFFF" Foreground="White"  Value="{Binding UploadingProgress}" Maximum="1.0"/>
                        <TextBlock Grid.Column="1" Margin="0,0,6,4" VerticalAlignment="Bottom" Foreground="#FFFFFFFF" micro:Message.Attach="[Event Tap] = [Action CancelUploading($DataContext)]" Text="{Binding Resources.Cancel, Source={StaticResource Strings}}" TextDecorations="Underline"/>
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        
        <selector:DecryptedMediaTemplateSelector
                x:Key="DecryptedMediaTemplateSelector"
                EmptyTemplate="{StaticResource MediaEmptyTemplate}"
                ContactTemplate="{StaticResource ContactTemplate}"
                PhotoTemplate="{StaticResource PhotoTemplate}"
                SecretPhotoTemplate="{StaticResource SecretPhotoTemplate}"
                VideoTemplate="{StaticResource VideoTemplate}"
                GeoPointTemplate="{StaticResource GeoPointTemplate}"
                DocumentTemplate="{StaticResource DocumentTemplate}"
                AudioTemplate="{StaticResource AudioTemplate}"
                UnsupportedTemplate="{StaticResource UnsupportedTemplate}"/>

        <DataTemplate x:Key="UserStickerTemplate">
            <Grid x:Name="MainItemGrid2">

                <!--<toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ForwardMessage($DataContext)]" Header="{Binding Resources.Forward, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding DataContext.IsBroadcast, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action AddToStickers($DataContext)]" Header="{Binding Resources.AddToStickers, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>-->

                <Grid x:Name="MainItemGrid" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="2" Margin="0,12,24,12" Background="Transparent">
                        <Grid>
                            <Image 
                                Stretch="Fill" 
                                Source="{Binding Self, Converter={StaticResource DefaultPhotoConverter}}"
                                Height="{Binding Media, Converter={StaticResource StickerToDimensionConverter}, ConverterParameter=Height}"
                                Width="{Binding Media, Converter={StaticResource StickerToDimensionConverter}, ConverterParameter=Width}"/>
                        </Grid>

                        <Border HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Grid Margin="12,8,12,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="5" Margin="-6" HorizontalAlignment="Stretch" Background="Black" Opacity="0.4"/>
                                <TextBlock Grid.Column="0" Margin="0,-7,0,-4" 
                                           Text="{Binding Status, Converter={StaticResource MessageStatusConverter}}" 
                                           Foreground="#99FFFFFF" 
                                           FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                           Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <TextBlock Grid.Column="1" micro:Message.Attach="[Event Tap] = [Action Resend($DataContext)]" 
                                           Text="{Binding Resources.Retry, Source={StaticResource Strings}}" 
                                           TextDecorations="Underline" 
                                           Margin="4,-7,0,-4" 
                                           Foreground="#99FFFFFF"
                                           FontFamily="{StaticResource PhoneFontFamilyNormal}" 
                                           FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                           Visibility="{Binding Status, Converter={StaticResource StringEqualsToVisibilityConverter}, ConverterParameter=Failed}"/>
                                <TextBlock Grid.Column="3" Margin="0,-7,6,-4" 
                                           Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" 
                                           Foreground="#99FFFFFF"
                                           FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                           Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <Image Grid.Column="4" Width="18" Stretch="UniformToFill" Source="{Binding Status, Converter={StaticResource StatusToImageConverter}}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
                <Border x:Name="SelectionBorder" 
                        Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" 
                        Hold="UIElement_OnHold" 
                        micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  
                        Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="UserMessageTemplate">
            <Grid x:Name="MainItemGrid2">

                <!--<toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu Visibility="{Binding SecretPhotoMenuVisibility}" IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action CopyMessage($DataContext)]" Header="{Binding Resources.Copy, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                            Visibility="{Binding MessageVisibility}" />
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>-->

                <Grid x:Name="MainItemGrid" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="2" Grid.Row="0" Margin="0,12,24,0" Background="{Binding Converter={StaticResource OverlayAccentBrush}}">
                        <Grid Canvas.ZIndex="2">
                            <emojiPanel:TelegramRichTextBox
                                Margin="0,6,0,0"
                                Width="335"
                                Visibility="{Binding MessageVisibility}"
                                Text="{Binding Message}"
                                HorizontalAlignment="Stretch"
                                Background="{Binding Converter={StaticResource OverlayAccentBrush}}"
                                TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"
                                FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}"
                                MoreElement="{Binding ElementName=MorePanel}"
                                Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
                            <Border x:Name="MorePanel" Background="{StaticResource PhoneAccentBrush}" VerticalAlignment="Bottom" Canvas.ZIndex="3" Visibility="Collapsed" Tap="MorePanel_OnTap">
                                <TextBlock Canvas.ZIndex="4"
                                        Text="{Binding Resources.More, Source={StaticResource Strings}, StringFormat='\{0\}...'}" 
                                        TextDecorations="Underline" 
                                        Margin="12,0,12,0" Foreground="#FFFFFFFF"
                                        FontFamily="{StaticResource PhoneFontFamilyNormal}" 
                                        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                        VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                            </Border>
                        </Grid>

                        <ContentControl 
                            Background="Transparent"
                            micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]; [Event MouseLeftButtonUp] = [Action OpenSecretPhoto($DataContext)]"
                            Margin="12,6,12,0"
                            HorizontalContentAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Content="{Binding Media}"
                            ContentTemplate="{Binding Converter={StaticResource DecryptedMediaTemplateSelector}}"/>
                        <Border Canvas.ZIndex="1" Background="{Binding Converter={StaticResource OverlayAccentBrush}}" HorizontalAlignment="Stretch" Margin="0,-1">
                            <Grid Margin="12,8,12,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<TextBlock Grid.Column="0" Margin="0,-7,0,-4" 
                                    Text="{Binding InSeqNo, StringFormat='in=\{0\}'}" 
                                    Foreground="#99FFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <TextBlock Grid.Column="1" Margin="12,-7,0,-4" 
                                    Text="{Binding OutSeqNo, StringFormat='out=\{0\}'}" 
                                    Foreground="#99FFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Style="{StaticResource PhoneTextSubtleStyle}"/>-->
                                <TextBlock Grid.Column="2" micro:Message.Attach="[Event Tap] = [Action Resend($DataContext)]" Text="{Binding Resources.Retry, Source={StaticResource Strings}}" 
                                    TextDecorations="Underline" 
                                    Margin="4,-7,0,-4" Foreground="#FFFFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    FontFamily="{StaticResource PhoneFontFamilyNormal}" 
                                    Visibility="{Binding Status, Converter={StaticResource StringEqualsToVisibilityConverter}, ConverterParameter=Failed}"/>
                                <TextBlock Grid.Column="4" Margin="0,-7,6,-4" 
                                    Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" 
                                    Foreground="#99FFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <Image Grid.Column="5" Height="18" Stretch="UniformToFill" Source="{Binding Status, Converter={StaticResource StatusToImageConverter}}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <Path Grid.Row="1" Grid.Column="2" Margin="0,0,36,0" x:Name="RightBottomCorner" Fill="{Binding Converter={StaticResource OverlayAccentBrush}}"  HorizontalAlignment="Right" VerticalAlignment="Top" Data="F1 M0,0 L1,1 L1,0" Width="12" Height="12" Stretch="Fill"/>
                </Grid>
                <Border x:Name="SelectionBorder" 
                        Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" 
                        Hold="UIElement_OnHold" 
                        micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  
                        Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FriendStickerTemplate">
            <Grid x:Name="MainItemGrid2">

                <!--<toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action ForwardMessage($DataContext)]" Header="{Binding Resources.Forward, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                                          Visibility="{Binding DataContext.IsBroadcast, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>
                        <toolkit:MenuItem micro:Message.Attach="[Event Click] = [Action AddToStickers($DataContext)]" Header="{Binding Resources.AddToStickers, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>-->

                <Grid x:Name="MainItemGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="12" />
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1" Grid.Column="1" Margin="24,0,0,12">
                        <Grid>
                            <Image 
                                Stretch="Fill" 
                                Source="{Binding Self, Converter={StaticResource DefaultPhotoConverter}}"
                                Height="{Binding Media, Converter={StaticResource StickerToDimensionConverter}, ConverterParameter=Height}"
                                Width="{Binding Media, Converter={StaticResource StickerToDimensionConverter}, ConverterParameter=Width}"/>
                        </Grid>
                        <Grid Margin="12,8,12,12"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Bottom">
                            <Border Margin="-6" HorizontalAlignment="Stretch" Background="Black" Opacity="0.4"/>
                            <TextBlock
                                Margin="0,-7,0,-4" 
                                Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" 
                                Foreground="#99FFFFFF"
                                FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                Style="{StaticResource PhoneTextSubtleStyle}"/>
                        </Grid>
                    </Grid>
                </Grid>
                <Border x:Name="SelectionBorder" Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" Hold="UIElement_OnHold" micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FriendMessageTemplate">
            <Grid x:Name="MainItemGrid2">

                <!--<toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu Visibility="{Binding SecretPhotoMenuVisibility}" IsZoomEnabled="False" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Items}">
                        <toolkit:MenuItem Click="DeleteMenuItem_OnClick" Header="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" />
                        <toolkit:MenuItem Click="CopyMenuItem_OnClick" Header="{Binding Resources.Copy, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"
                            Visibility="{Binding MessageVisibility}" />
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>-->

                <Grid x:Name="MainItemGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="12" />
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Path x:Name="LeftUpCorner" Grid.Column="1" HorizontalAlignment="Left" Fill="{StaticResource PhoneAccentBrush}"  Margin="36,0,0,0" VerticalAlignment="Bottom" Data="F1 M0,0 L0,1 L1,1" Width="12" Height="12" Stretch="Fill"/>

                    <StackPanel Grid.Row="1" Grid.Column="1" Margin="24,0,0,12" Background="{StaticResource PhoneAccentBrush}">
                        <Grid Canvas.ZIndex="2">
                            <emojiPanel:TelegramRichTextBox
                                Margin="0,6,0,0"
                                Visibility="{Binding MessageVisibility}"
                                Width="335"
                                Text="{Binding Message}"
                                TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"
                                FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}"
                                MoreElement="{Binding ElementName=MorePanel}"
                                Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
                            <Border x:Name="MorePanel" Background="{StaticResource PhoneAccentBrush}" VerticalAlignment="Bottom" Canvas.ZIndex="3" Visibility="Collapsed" Tap="MorePanel_OnTap">
                                <TextBlock Canvas.ZIndex="4"
                                    Text="{Binding Resources.More, Source={StaticResource Strings}, StringFormat='\{0\}...'}" 
                                    TextDecorations="Underline" 
                                    Margin="12,0,12,0" Foreground="#FFFFFFFF"
                                    FontFamily="{StaticResource PhoneFontFamilyNormal}" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                            </Border>
                        </Grid>
                        <ContentControl
                                Background="Transparent"
                                micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]"
                                Margin="12,6,12,0"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Content="{Binding Media}"
                                ContentTemplate="{Binding Converter={StaticResource DecryptedMediaTemplateSelector}}"/>
                        <Border Canvas.ZIndex="1" Margin="0,-1" Background="{StaticResource PhoneAccentBrush}">
                            <Grid Margin="12,8,12,12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<TextBlock Grid.Column="0" Margin="0,-7,0,-4" 
                                    Text="{Binding InSeqNo, StringFormat='in=\{0\}'}" 
                                    Foreground="#99FFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Style="{StaticResource PhoneTextSubtleStyle}"/>
                                <TextBlock Grid.Column="1" Margin="12,-7,0,-4" 
                                    Text="{Binding OutSeqNo, StringFormat='out=\{0\}'}" 
                                    Foreground="#99FFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Style="{StaticResource PhoneTextSubtleStyle}"/>-->

                                <TextBlock Grid.Column="3" Margin="0,-7,0,-4" 
                                    Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}}" 
                                    Foreground="#99FFFFFF" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Style="{StaticResource PhoneTextSubtleStyle}"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Grid>
                <Border x:Name="SelectionBorder" Background="{Binding IsSelected, Converter={StaticResource IsSelectedToBackgroundConverter}}" Hold="UIElement_OnHold" micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"  Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=Self, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="ServiceMessageTemplate">
            <Grid Margin="48,12" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="2" Margin="-6" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                <TextBlock Grid.Row="0" Margin="6,0" TextAlignment="Center" TextWrapping="Wrap" FontSize="20" Text="{Binding Converter={StaticResource DecryptedServiceMessageToTextConverter}}" Style="{StaticResource PhoneTextNormalStyle}"/>
                
                <!--<Grid Grid.Row="1" Margin="12,-7,0,-4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="0" 
                        Text="{Binding InSeqNo, StringFormat='in=\{0\}'}"
                        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                        Style="{StaticResource PhoneTextSubtleStyle}"/>
                    <TextBlock Grid.Column="1" Margin="0" 
                        Text="{Binding OutSeqNo, StringFormat=' out=\{0\}'}"
                        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                        Style="{StaticResource PhoneTextSubtleStyle}"/>
                    <TextBlock Grid.Column="2" Margin="0" 
                        Text="{Binding Date, StringFormat=' date=\{0\}'}"
                        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                        Style="{StaticResource PhoneTextSubtleStyle}"/>
                    <TextBlock Grid.Column="3" Margin="0" 
                        Text="{Binding Unread, StringFormat=' u=\{0\}'}"
                        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                        Style="{StaticResource PhoneTextSubtleStyle}"/>
                    <TextBlock Grid.Column="4" Margin="0" 
                        Text="{Binding Out, StringFormat=' o=\{0\}'}"
                        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                        Style="{StaticResource PhoneTextSubtleStyle}"/>
                </Grid>-->
            </Grid>
        </DataTemplate>

        <selector:DecryptedMessageTemplateSelector 
            x:Key="DecryptedMessageTemplateSelector"
            UserMessageTemplate="{StaticResource UserMessageTemplate}"
            UserStickerTemplate="{StaticResource UserStickerTemplate}"
            FriendMessageTemplate="{StaticResource FriendMessageTemplate}"
            FriendStickerTemplate="{StaticResource FriendStickerTemplate}"
            ServiceMessageTemplate="{StaticResource ServiceMessageTemplate}"/>
        
    </views:TelegramViewBase.Resources>
    <Grid>
        <ContentControl 
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
            Content="{Binding StateService}" 
            ContentTemplate="{Binding StateService.CurrentBackground, Converter={StaticResource DialogDetailsBackgroundConverter}}"/>
        
        <Grid x:Name="LayoutRoot" Background="Transparent">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <Grid.Projection>
                <PlaneProjection CenterOfRotationX="0"/>
            </Grid.Projection>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--<TextBlock Text="{Binding Stopwatch, ElementName=Self}"/>-->
            <ContentControl x:Name="MediaControl" IsHitTestVisible="False"/>
            <Button x:Name="OpenPeerDetails"
                toolkit:TiltEffect.IsTiltEnabled="True"
                Margin="-4,30,0,12" Grid.Row="0" VerticalAlignment="Bottom" Style="{StaticResource DialogDetailsCaptionButtonStyle}">
                <StackPanel>
                    <Grid x:Name="Title">
                        <Grid.RenderTransform>
                            <CompositeTransform/>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0"
                           Source="{Binding EncryptedImageSource}" 
                           Height="20" Width="20"
                           HorizontalAlignment="Right" VerticalAlignment="Bottom"
                           Stretch="Uniform"
                           Margin="6,0,-6,7"/>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding With.FullName}" MaxHeight="42.56" Foreground="{Binding StateService.CurrentForegroundBrush}" Style="{StaticResource PhoneTextTitle2Style}"/>
                    </Grid>
                    
                    <TextBlock x:Name="Subtitle" Margin="12,-4,0,0" Foreground="{Binding StateService.CurrentForegroundSubtleBrush}" Style="{StaticResource PhoneTextSubtleStyle}"/>
                </StackPanel>
            </Button>

            <Border x:Name="DialogPhoto" Margin="12,48,24,0" VerticalAlignment="Top" Grid.Row="0" Grid.Column="1" Width="54" Height="54" Background="{Binding With.Index, Converter={StaticResource PlaceholderBackgroundConverter}}">
                <Grid Background="Transparent" micro:Message.Attach="[Event Tap] = [Action OpenPeerDetails]">
                    <TextBlock FontSize="27" Margin="0,-2,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Text="{Binding With, Converter={StaticResource PlaceholderDefaultTextConverter}}"/>
                    <Image Source="{Binding With.Photo, Converter={StaticResource DefaultPhotoConverter}}"/>
                </Grid>
            </Border>

            <Grid x:Name="ContentPanel" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                

                <Grid x:Name="Description" VerticalAlignment="Center" Margin="90,-35,90,0"
                    Visibility="{Binding DescriptionVisibility}">
                    <Border Margin="-12" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding Status}" TextAlignment="Center" TextWrapping="Wrap"/>
                        <TextBlock Text="{Binding Resources.SecretChatsDescription, Source={StaticResource Strings}}" Margin="0,16,0,0" TextAlignment="Left" TextWrapping="Wrap"/>
                    </StackPanel>
                </Grid>

                <client:LongListSelectorEx
                    x:Name="Items"
                    CacheMode="BitmapCache"
                    Margin="-4,-18,0,0"
                    Knob="15"
                    ItemsSource="{Binding Items}"
                    IsSelectionEnabled="{Binding IsSelectionEnabled}"
                    IsGroupingEnabled="False"
                    micro:Message.Attach="[Event CloseToEnd] = [Action LoadNextSlice]"
                    ManipulationStarted="Items_OnManipulationStarted"
                    Style="{StaticResource LazyLongListSelectorStyle}">
                    <phone:LongListSelector.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid>
                                    <CheckBox Margin="12,0,18,0" IsChecked="{Binding IsSelected, Mode=TwoWay}" HorizontalAlignment="Right"
                                          Visibility="{Binding SelectionVisibility, FallbackValue=Collapsed}">
                                        <CheckBox.RenderTransform>
                                            <TranslateTransform X="2"/>
                                        </CheckBox.RenderTransform>
                                        <CheckBox.Projection>
                                            <PlaneProjection RotationZ="180"/>
                                        </CheckBox.Projection>
                                    </CheckBox>
                                    <Border Background="Transparent" micro:Message.Attach="[Event Tap] = [Action ChangeSelection($DataContext)]"/>
                                </Grid>
                                <ContentControl Margin="0,0,60,0"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                                    Content="{Binding}" ContentTemplate="{Binding Converter={StaticResource DecryptedMessageTemplateSelector}}">
                                    <ContentControl.Projection>
                                        <PlaneProjection RotationZ="180"/>
                                    </ContentControl.Projection>
                                </ContentControl>
                            </Grid>
                        </DataTemplate>
                    </phone:LongListSelector.ItemTemplate>
                    <phone:LongListSelector.ListHeader>
                        <Border Background="Transparent" Height="2"/>
                    </phone:LongListSelector.ListHeader>
                    <phone:LongListSelector.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </phone:LongListSelector.Projection>
                </client:LongListSelectorEx>
                <Image x:Name="MessagesCache" Source="{Binding Chat.Bitmap}" Margin="-4,-18,0,0" CacheMode="BitmapCache">
                    <Image.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Image.Projection>
                </Image>

                <controls1:AudioRecorderControl 
                    MinHeight="62"
                    x:Name="AudioRecorder" 
                    Visibility="{Binding InputVisibility}"
                    Foreground="{Binding StateService.CurrentForegroundBrush}"
                    Margin="0,0,0,12"                  
                    Grid.Row="1"/>

                <controls:WatermarkedTextBox 
                    x:Name="InputMessage"
                    Grid.Row="1"
                    KeyDown="InputMessage_OnKeyDown"
                    TextChanged="InputMessage_OnTextChanged"
                    GotFocus="InputMessage_OnGotFocus"
                    LostFocus="InputMessage_OnLostFocus"
                    Visibility="{Binding InputVisibility}"
                    Margin="109,0,12,12"
                    HorizontalContentAlignment="Left" 
                    HorizontalAlignment="Stretch"
                    Watermark="{Binding Resources.YourMessage, Converter={StaticResource Lowercase}, Source={StaticResource Strings}}"
                    WatermarkForeground="{Binding WatermarkForeground}"
                    Text="{Binding Text, Mode=TwoWay}"
                    MinHeight="48" MaxHeight="140" VerticalAlignment="Bottom" AcceptsReturn="True" 
                    TextWrapping="Wrap"
                    InputScope="Text"
                    TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"
                    FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}"
                    Style="{StaticResource MessageTextBoxStyle}">
                    <controls:WatermarkedTextBox.RenderTransform>
                        <CompositeTransform/>
                    </controls:WatermarkedTextBox.RenderTransform>
                    <i:Interaction.Behaviors>
                        <behaviors:UpdateTextBindingBehavior/>
                    </i:Interaction.Behaviors>
                </controls:WatermarkedTextBox>

                <ContentControl x:Name="EmojiPlaceholder" Grid.Row="2" HorizontalContentAlignment="Stretch" Visibility="Collapsed"/>

                <Border x:Name="WaitingBar" Background="{StaticResource PhoneChromeBrush}" Height="72" Grid.Row="3" HorizontalAlignment="Stretch">
                    <Grid>
                        <TextBlock Visibility="{Binding WaitingBarVisibility}" Text="{Binding AppBarStatus}" VerticalAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Stretch" TextAlignment="Center"/>
                        <Button Margin="0,-6" x:Name="DeleteChat" VerticalAlignment="Center" Visibility="{Binding DeleteButtonVisibility}" Content="{Binding Resources.Delete, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}"/>
                    </Grid>
                </Border>
            </Grid>

            <ContentControl 
                x:Name="SecretChatDebug" 
                Visibility="{Binding Converter={StaticResource PrivateBetaIdentityNameToVisibilityConverter}}"
                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                Margin="0,-18,0,0"/>

            <ContentControl
                Grid.Row="0" Grid.Column="0"
                Grid.ColumnSpan="2" Grid.RowSpan="2" 
                x:Name="ChooseAttachment" 
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
        </Grid>
        <ContentControl
            Grid.RowSpan="2" Grid.ColumnSpan="2" 
            x:Name="ImageViewer"
            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
            VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <Border
            Grid.RowSpan="2" Grid.ColumnSpan="2" 
            x:Name="SecretImageViewer"
            Background="Black"
            Visibility="Collapsed"
            MouseLeftButtonUp="SecretImageViewer_OnMouseLeftButtonUp"
            MouseLeave="SecretImageViewer_OnMouseLeave"
            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Image Source="{Binding SecretPhoto.Media, Converter={StaticResource DefaultPhotoConverter}, Mode=OneWay}" Stretch="Uniform"/>
        </Border>
    </Grid>

</views:TelegramViewBase>